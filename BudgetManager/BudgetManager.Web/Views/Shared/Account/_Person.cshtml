@using System.Linq.Expressions
@using BudgetManager.Extentions.Mvc
@using BudgetManager.Models.ComplexTypes
@model Person
@helper EditorField(Expression<Func<Person, string>> expression)
{
    <div class="inline">
        <div class="editor-label">@Html.LabelFor(expression)</div>
        <div class="editor-field">@Html.EditorFor(expression)@Html.ValidationMessageFor(expression)</div>
    </div>
}

<div>
    <div class="inline">
        <div class="editor-label">@Html.LabelFor(model => model.Title)</div>
        <div class="editor-field">@Html.EnumDropDownListFor(model => model.Title) @Html.ValidationMessageFor(model => model.Title)</div>
    </div>
    <div class="hide">
        @EditorField(model => model.TitleOther)
    </div>
    @EditorField(model => model.FirstName)
    @EditorField(model => model.NickName)
    @EditorField(model => model.MiddleNames)
    @EditorField(model => model.Surname)
</div>
<div class="inline">
    <div class="editor-label">@Html.LabelFor(model => model.Gender)</div>
    <div class="editor-field">@Html.EnumDropDownListFor(model => model.Gender) @Html.ValidationMessageFor(model => model.Gender)</div>
</div>
<div>@Html.PartialFor(model => model.ContactDetail, "Account/_ContactDetail")</div>
<div>@Html.PartialFor(model => model.AddressInfoHome, "Account/_AddressInfo")</div>
<div>@Html.PartialFor(model => model.AddressInfoWork, "Account/_AddressInfo")</div>